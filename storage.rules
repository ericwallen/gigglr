rules_version = '2';

// Firebase Storage Security Rules for Gigglr
service firebase.storage {
  match /b/{bucket}/o {
    
    // Videos folder - users can manage their own videos
    match /Videos/{userId}/{allPaths=**} {
      // Allow read/write for authenticated users accessing their own files
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // Allow public read for video playback (needed for TV channels)
      allow read: if true;
      
      // Validate video uploads
      allow write: if request.auth != null 
        && request.auth.uid == userId
        && isValidVideoFile();
    }
    
    // Thumbnails folder - users can manage their own thumbnails
    match /Thumbnails/{userId}/{allPaths=**} {
      // Allow read/write for authenticated users accessing their own files
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // Allow public read for thumbnail display (needed for TV channels and public viewing)
      allow read: if true;
      
      // Validate thumbnail uploads
      allow write: if request.auth != null 
        && request.auth.uid == userId
        && isValidThumbnailFile();
    }
    
    // Legacy AdultArcadeMaker folder support (if needed for existing files)
    match /AdultArcadeMaker/{userId}/{allPaths=**} {
      // Allow read/write for authenticated users accessing their own files
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // Allow public read for legacy video playback
      allow read: if true;
    }
    
    // Admin access to all files
    match /{allPaths=**} {
      allow read, write: if request.auth != null 
        && request.auth.token.admin == true;
    }
    
    // Deny all other access
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
  
  // Helper functions for file validation
  function isValidVideoFile() {
    return request.resource.size <= 3000 * 1024 * 1024  // 3000MB max
      && request.resource.size >= 1 * 1024 * 1024       // 1MB min
      && request.resource.contentType.matches('video/.*');
  }
  
  function isValidThumbnailFile() {
    return request.resource.size <= 10 * 1024 * 1024    // 10MB max for thumbnails
      && request.resource.size >= 1 * 1024              // 1KB min
      && (request.resource.contentType.matches('image/jpeg') 
          || request.resource.contentType.matches('image/jpg')
          || request.resource.contentType.matches('image/png')
          || request.resource.contentType.matches('image/webp'));
  }
}
